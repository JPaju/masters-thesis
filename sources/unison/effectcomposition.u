structural ability Exception e where
  raise : e -> a


map : (a -> {e} b) -> [a] -> {e} [b]
map f = cases
    head +: tail  -> f head +: map f tail
    []            -> []

nums  : [Nat]
nums = [1, 2, 3, 4, 5]

pure : [Nat]
pure =  map (n -> n * 2) nums

effectful : '{Exception Text} [Nat]
effectful _ = map (n -> if n > 5 then raise "Too large" else n * 2) nums

aborted : '{Abort} [Nat]
aborted = '(map (n -> if n > 5 then abort else n * 2) nums)

printed : '{abilities.Exception, IO} [Unit]
printed = '(map (n -> printLine (Nat.toText n)) nums)
